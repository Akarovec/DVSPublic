#include <iostream>
#include <string>
#include <fstream>
#include "pch.h"

using namespace std;

/*
Весь вырабатываемый момент идет на раскрутку коленвала, ускорение его вычисляется a = M / l
Скорость нагрева высчитывается Vn = M * Hm + V*V + Hv
Скорость охлаждения двигателя Vc = C* (Ts - Td)
Td(t0) = Ts
*/

/*
Из кусочных функций получаем уравнения прямых.
пусть V будет осью абсцисс, а M осью ординат
тогда у нас будет 5 прямых/ Для каждой из них нужно будет получить коэффициенты K и b, после чего можно будет получить соответствующие зависимости;
формула прямой y = kx + b
где k = (y1 - y2)/(x1 - x2)
b = y2 - kx2
где x1,x2,y1,y2 это координаты точек Т1(x1,y1) и T2(x2,y2);

при расчете времени, за 1 секунду dTt, V будетм еняться на a(dTt) !!! т.е. V(t) = V0 + a*t;

*/

/*
Соответственно по итогу примерная схема:
Рабочее тело:
Ввод температуры окружающей среды. Ok
Проверяем, что данные в верном диапазоне. Ok
Открываем файл с результатами симуляции
проверяем, что файл открыт
ищем строку с данной температурой
выводим соответствующее время
закрываем файл
профит

Тестовое тело:
 Должно создать файл с имянем,которое состоит из исходных, текущих, используемых данных.
 Наполнить его данными по КАЖДОЙ температуре из диапозона от -273 до 120 градусов.

*/
/*
Движение у нас с переменным ускорением, поэтому сначала попробуем сначала написать решение посредством dt -> 0,0001 и кусочными значениями.
Второй попыткой будет гугление интеграллов в С++.
*/

class Engine
{
public:


	double l = 10, N = 6, M[6] = { 20,75,100,105,75,0 }, V[6] = { 0,75,150,200,250,300 },
		Hm = 0.01, Hv = 0001, C = 0.1, Ts = 0, Td = 0, Tmax = 110 + 273;
	double KFk(double x1, double x2, double y1, double y2)
	{
		double k, b;
		k = (y1 - y2) / (x1 - x2);


		return k;
	}
	double KFb(double x1, double x2, double y1, double y2)
	{
		double k, b;
		k = (y1 - y2) / (x1 - x2);
		b = y2 - k * x2;

		return b;

	}
	double Mt(double Vt)
	{
		double Mm;
		if (0 <= Vt && Vt < 75)
		{
			Mm = KFk(V[0], V[1], M[0], M[1])*Vt + KFb(V[0], V[1], M[0], M[1]);
		}
		else if (75 <= Vt && Vt < 150)
		{
			Mm = KFk(V[1], V[2], M[1], M[2])*Vt + KFb(V[1], V[2], M[1], M[2]);
		}
		else if (150 <= Vt && Vt < 200)
		{
			Mm = KFk(V[2], V[3], M[2], M[3])*Vt + KFb(V[2], V[3], M[2], M[3]);
		}
		else if (200 <= Vt && Vt < 250)
		{
			Mm = KFk(V[3], V[4], M[3], M[4])*Vt + KFb(V[3], V[4], M[3], M[4]);
		}
		else if (250 <= Vt && Vt <= 300)
		{
			Mm = KFk(V[4], V[5], M[4], M[5])*Vt + KFb(V[4], V[5], M[4], M[5]);
		}
		else
		{
			Mm = 999999;
		}
		return Mm;
	}
	double Vt(int t)
	{
		if (t = 0)
		{
			Vv = V[0];
		}
		else
		{ 
			Vv = V(t - 1) + Mt(Vt(t - 1))*t / L;
		}
		return Vv;

	}





};
float temp()
{
	float Ts = 0;
	int gj = 0;
	while (gj < 1)
	{
		cout << "Введите целое число в диапазоне от -273 до 120: " << endl;
		cin >> Ts;
		Ts += 273;
		if (Ts < 0 || Ts>120 + 273)
			cout << "Вы ввели неверное число, попробуйте ввести число заново." << endl;
		else
			gj++;

	}

	cout << "Температура среды: " << Ts << " по Кельвину." << endl;

	return Ts;

}



int main()
{
	setlocale(LC_ALL, "Russian");
	Engine DVS;
	/*ofstream baza;
	baza.open("dvst120.txt");*/

	double l = 10, M[6] = { 20,75,100,105,75,0 }, V[6] = { 0,75,150,200,250,300 },
		Hm = 0.01, Hv = 0001, C = 0.1, Ts = 0, Td = 0, Tmax = 383;
	int t = 0;
	Ts = temp();
	Td = Ts;
	for (t; Td < Tmax; t++)
	{
		Td = (Ts + (DVS.Mt(DVS.Vt(t))*Hm + DVS.Vt(t)*DVS.Vt(t) + Hv) - C * Ts) / (1 - C);
	}

	cout << "Двигатель перегреется через " << t << " секунд." << endl;





	/*baza<<*/


	system("Pause");
	return 0;
}

